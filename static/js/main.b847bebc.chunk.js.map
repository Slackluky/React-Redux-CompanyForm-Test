{"version":3,"sources":["components/svgFlags/id.svg","components/svgFlags/my.svg","components/svgFlags/sg.svg","components/svgFlags/th.svg","components/svgFlags/fp.svg","components/OfficeList.js","components/formOffice.js","components/formCompany.js","components/CompanyList.js","components/index.js","Routes.js","App.js","serviceWorker.js","reducers/CompReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Title","Content","OfficeList","state","visible","obt_id","offi_id","showModal","id","Oid","_this","setState","handleOk","props","dispatch","type","handleCancel","e","console","log","onDelete","_this2","this","targetId","match","params","companies","filter","value","map","company","react_default","a","createElement","key","layout","className","card","level","companyname","divider","row","col","span","xs","sm","md","lg","xl","style","fontWeight","fontSize","address","revenue","code","phonumb","react_router_dom","to","es_button","block","offices","list","grid","xxl","locale","emptyText","dataSource","renderItem","companyoffices","index","Item","title","officename","extra","icon","onClick","lat","startdate","modal","onOk","onCancel","React","Component","connect","companyData","Option","es_select","FormO","handleSubmit","preventDefault","form","validateFields","err","fieldsValue","text","offici","Object","objectSpread","format","makeId","resetFields","message","success","possible","i","charAt","Math","floor","random","length","getFieldDecorator","es_form","onSubmit","label","rules","required","whitespace","input","placeholder","marginBottom","display","width","input_number","min","max","step","textAlign","date_picker","htmlType","OfficeForm","create","InputGroup","Group","FormC","prefixSelector","initialValue","formCompany_Option","src","alt","my","sg","th","fp","maxLength","minLength","CompanyForm","CompanyList","pathname","Header","Footer","AllComponent","components_Content","gutter","bordered","formCompany","formOffice","components_CompanyList","Routes","react_router","exact","path","component","App","src_Routes","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","CompReducer","arguments","undefined","action","concat","push","toConsumableArray","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b847bebc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/id.17b99676.svg\";","module.exports = __webpack_public_path__ + \"static/media/my.c52af28e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sg.45fb3666.svg\";","module.exports = __webpack_public_path__ + \"static/media/th.76fca72f.svg\";","module.exports = __webpack_public_path__ + \"static/media/fp.4e44ea60.svg\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, Card, Icon, Layout, Typography, Button, Divider, Row, Col, Modal } from \"antd\";\nimport {Link} from 'react-router-dom';\nimport './App.css';\nconst { Title } = Typography;\nconst { Content } = Layout;\n\n\nclass OfficeList extends React.Component {\n\n    state = { visible: false ,\n              obt_id:'',\n              offi_id: '',\n    }\n\n  showModal = (id, Oid) => {\n    \n    this.setState({\n      visible: true,\n    });\n    this.setState({ obt_id: id , offi_id : Oid });\n  }\n\n  handleOk = () => {\n    const id = this.state.obt_id;\n    const Oid = this.state.offi_id\n    this.props.dispatch({type:'REMOVE_OFFICE',id, Oid})\n    this.setState({\n      visible: false,\n    });\n  }\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  }\n\n\n  onDelete = (id, Oid) => {\n    this.props.dispatch({type:'REMOVE_OFFICE',id,Oid}) // mengambil value dari widget dan diproses ko reducer\n  }\n\n  render() {\n    const { targetId } = this.props.match.params //mengambil params dari react-router\n    let {companies} = this.props\n    const doubled = companies.filter(value=>{\n    return value.id === targetId; // mensortir detail dari company dari ID nya\n    });\n\n    return doubled.map((company )=> (\n      <div key={company.id}>\n      <Layout className=\"container\">\n        <Content className=\"content1\"> \n        <Card>\n          <div>\n        <Title level={2}>{company.companyname}</Title>\n        <Divider/>\n        <Row>\n          <Col span={12} xs={24} sm={24} md={12} lg={12} xl={12}>\n          <span style={{fontWeight: \"bold\", fontSize:20}}>\n              Address:</span><br/>{company.address}<br/>\n              <span style={{fontWeight: \"bold\", fontSize:20}}>\n              Revenue:</span><br/>{company.revenue}<br/>\n              <span style={{fontWeight: \"bold\", fontSize:20}}>\n              Phone Number: <br/> </span> ({company.code}){company.phonumb}\n              <br/>\n          </Col>\n          <Col span={12} xs={24} sm={24} md={12} lg={12} xl={12}>\n          <Link to='/'>\n              <Button block type=\"primary\" className=\"buttonBack\" >Back to Overview</Button>\n              </Link>\n          </Col>\n        </Row>\n\n\n        </div>\n        <Divider/>\n        <Title level={3}>Offices:</Title>\n        {\n        (typeof(company.offices)=='object')?\n        <div>\n          {\n            \n     <List\n        grid={{ xs: 1, sm: 2, md: 2, lg: 2, xl: 3, xxl: 3 }}\n        locale={{ emptyText: \"there is no office created yet\" }}\n        dataSource={company.offices}\n        renderItem={(companyoffices, index)=>(\n          <List.Item\n          key={index}\n          companyoffices={companyoffices}\n            >\n              <Card\n              title={<span style={{ fontWeight:\"bold\", fontSize: 20}}>\n              {companyoffices.officename}</span>}\n              className=\"cardC\"\n              extra={<Icon style={{ fontSize: 18}} type=\"close\" onClick={() => this.showModal(company.id, companyoffices.Oid)}/>}\n              >\n              <span style={{fontWeight: \"bold\"}}>\n              Location:</span><br/>\n              Latitude: {companyoffices.lat}<br/>\n              Logitude: {companyoffices.log}<br/>\n              <span style={{fontWeight: \"bold\"}}>\n              Office Start Date: <br/> </span> {companyoffices.startdate}<br/>\n              </Card>\n          </List.Item>\n        )}\n            />\n          }\n        </div>\n        : null\n        }\n\n        </Card>\n        </Content>\n        </Layout>\n\n                    <Modal\n                        title=\"Confirmation\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                      >\n                      Are you sure want to remove this office?\n                      </Modal>\n      </div>\n    ));\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  companies: state.companyData\n});\n\nexport default connect(mapStateToProps)(OfficeList);","import {Form, DatePicker, Button, Input, Select, InputNumber, message} from 'antd';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nconst Option = Select.Option; \n\n  class FormO extends Component {\n   makeId() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 5; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n\n  handleSubmit = (e) => {\n\n    e.preventDefault();\n    this.props.form.validateFields((err, fieldsValue, text) => {\n      if (err) {\n        return;\n      }\n    const id=fieldsValue.id\n    \n    const offici = { \n    ...fieldsValue,\n    'startdate': fieldsValue['startdate'].format('YYYY-MM-DD'),\n    Oid: this.makeId(text)\n    \n    };\n      this.props.dispatch({\n                type:'CREATE_OFFICE',\n                id,offici});\n              console.log(offici, id)\n              this.props.form.resetFields()\n              });\n              message.success('a new office is created successfuly');\n      }\n\n    render() {\n      let {companies} = this.props\n      const { getFieldDecorator } = this.props.form;\n      return (\n        <Form onSubmit={this.handleSubmit}>\n         <Form.Item label=\"Name\">\n            {getFieldDecorator('officename', {\n                rules: [{ required: true, message: 'Please input office name!', whitespace: true}],\n              })(\n                <Input placeholder=\"Name\"/>\n              )}\n          </Form.Item>\n          <Form.Item label=\"Location\"\n          style={{ marginBottom: 0 }}\n          required\n          >\n                  <Form.Item style={{ display: 'inline-block', width: 'calc(50% - 12px)' }}>\n                  {getFieldDecorator('log', {\n                          rules: [{ required: true, message: 'Please input office name!'}],\n                           })(\n                          <InputNumber \n                          type=\"number\" style={{ width: '100%' }} placeholder=\"Logtitude\" min={-180} max={180} step={0.1}  />\n                        )}\n                  </Form.Item>\n                        <span style={{ display: 'inline-block', width: '24px', textAlign: 'center' }}>\n                          -\n                        </span>\n                  <Form.Item style={{ display: 'inline-block', width: 'calc(50% - 12px)' }}>\n                        {getFieldDecorator('lat', {\n                        rules: [{ required: true, message: 'Please input office name!' }],\n                          })(\n                        <InputNumber type=\"number\" style={{ width: '100%' }} placeholder=\"Latitude\"  min={-90} max={90} step={0.1} />\n                        )}\n                  </Form.Item>\n          </Form.Item>\n          <Form.Item label=\"Office Start Date\">\n                  {getFieldDecorator('startdate', {\n                    rules: [{ type: 'object', required: true, message: 'Please input office name!', whitespace: true }],\n                  })(\n                    <DatePicker placeholder=\"Office Start Date\" />\n                  )}\n          </Form.Item>\n          <Form.Item label=\"Company\">\n                {getFieldDecorator('id', {\n                  rules: [{required: true, message: 'Select Company!', whitespace: true }],\n                })(\n                  <Select placeholder=\"Select Company\">\n                  {companies.map((company) => \n                  <Option key={company.id} value={company.id} company={company}>{company.companyname}\n                  </Option>)}\n                </Select>\n                )}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" className=\"form-button\" htmlType=\"submit\" >Create</Button>\n          </Form.Item>\n        </Form>\n      );\n    }\n  }\n\n  const mapStateToProps = state => ({\n    companies: state.companyData\n  });\n  const OfficeForm = Form.create()(FormO)\n  export default connect(mapStateToProps)(OfficeForm);","import {Form, Button, Input,InputNumber, Select, message} from 'antd';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport id from './svgFlags/id.svg'\nimport my from './svgFlags/my.svg'\nimport sg from './svgFlags/sg.svg'\nimport th from './svgFlags/th.svg'\nimport fp from './svgFlags/fp.svg'\n\nconst Option = Select.Option;\nconst InputGroup = Input.Group;\n\n  class FormC extends Component {\n\n    // Generates an ID\n            makeId() {\n              var text = \"\";\n              var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n              for (var i = 0; i < 5; i++)\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n              return text;\n            }\n\n            handleSubmit = (e) => {\n\n              e.preventDefault();\n              this.props.form.validateFields((err, fieldsValue, text) => {\n                if (err) {\n                  return;\n                }\n              const company = {\n              ...fieldsValue,\n              id: this.makeId(text),\n              offices:[]\n              };\n                this.props.dispatch({\n                          type:'CREATE',\n                          company});\n                        console.log(company)\n                        this.props.form.resetFields()\n                        });    \n                        message.success('a new company is created successfuly');\n                }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const prefixSelector = getFieldDecorator('code', {\n          rules: [{ required: true, message: 'Please input your phone number!' }],\n          initialValue:'+62'\n          })(\n            <Select style={{width:'100%'}}>\n              <Option value='+62'>\n              <img src={id} alt=\"id\" className=\"flag\"/> +62              \n              </Option>\n              <Option value='+60'>\n              <img src={my} alt=\"my\" className=\"flag\"/> +60         \n              </Option>\n              <Option value='+65'>\n              <img src={sg} alt=\"sg\" className=\"flag\"/> +65              \n              </Option>\n              <Option value='+66'>\n              <img src={th} alt=\"th\" className=\"flag\"/> +66              \n              </Option>\n              <Option value=\"+63\">\n              <img src={fp} alt=\"fp\" className=\"flag\"/> +63              \n              </Option>\n            </Select>\n          );\n      return (\n        <Form onSubmit={this.handleSubmit}>\n         <Form.Item label=\"Name\">\n         {getFieldDecorator('companyname', {\n            rules: [{ required: true, message: 'Please input your Company name!' }],\n          })(\n            <Input placeholder=\"Name\"\n            />\n          )}\n          </Form.Item>\n          <Form.Item label=\"Address\">\n          {getFieldDecorator('address', {\n            rules: [{ required: true, message: 'Please input your Address!' }],\n          })(\n            <Input placeholder=\"Address\"\n            />\n          )}\n          </Form.Item>\n          <Form.Item label=\"Revenue\">\n        {getFieldDecorator('revenue', {\n            rules: [{ required: true, message: 'Please input your revenue!' }],\n          })(\n            <InputNumber placeholder=\"Revenue\"\n            maxLength=\"5\"\n            style={{width:'100%'}}\n            min={0} \n            />\n          )}\n         \n          </Form.Item>\n          <Form.Item label=\"Phone Number\" \n              style={{ marginBottom: 0 }}\n              required\n          >\n\n            <InputGroup>\n            <Form.Item style={{ display: 'inline-block', width: 'calc(40% - 12px)' }}>\n            {prefixSelector}\n            </Form.Item>\n            <span style={{ display: 'inline-block', width: '20px', textAlign: 'center' }}>\n            </span>\n            <Form.Item style={{ display: 'inline-block', width: 'calc(60% - 12px)' }}>\n          {getFieldDecorator('phonumb', {\n            rules: [{ required: true, message: 'Please input your phone number!' }],\n          })(\n            <InputNumber\n            maxLength=\"11\"\n            minLength=\"5\"\n            style={{ width: '100%' }}\n            min={0}\n            />\n            )}\n            </Form.Item>\n            </InputGroup>\n          \n        </Form.Item>\n          <Form.Item>\n            <Button className=\"form-button\" type=\"primary\" htmlType=\"submit\" >Create</Button>\n          </Form.Item>\n        </Form>\n      );\n    }\n  }\n\n  const CompanyForm = Form.create()(FormC)\n  export default connect(null)(CompanyForm);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, Card, Icon, Modal } from \"antd\";\nimport {\n  Link\n    } from 'react-router-dom';\n\nclass CompanyList extends React.Component {\n  state = { visible: false ,\n            obt_id:'',\n  }\n\n  showModal = (id) => {\n    \n    this.setState({\n      visible: true,\n    });\n    this.setState({ obt_id: id });\n  }\n\n  handleOk = () => {\n    const id = this.state.obt_id\n    this.props.dispatch({type:'REMOVE',id})\n    this.setState({\n      visible: false,\n    });\n  }\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  }\n\n\n  render() {\n    let {companies} = this.props\n    const CompNode =  () =>(\n      <List\n        grid={{ xs: 1, sm: 2, md: 2, lg: 2, xl: 3, xxl: 3 }}\n        locale={{ emptyText: \"there is no companies created yet\" }}\n        dataSource={companies}\n        renderItem={(company)=>(\n          <List.Item \n          key={company.id}\n          company={company}>\n                  <Card \n                  title={<Link to={{ pathname: '/OfficeList/'+ company.id}} style={{ fontWeight:\"bold\", fontSize: 20}} >\n                  {company.companyname}</Link> }\n                  className=\"cardC\"\n                  extra={<div><Icon style={{ fontSize: 18}} type=\"close\" onClick={() => this.showModal(company.id)}/></div>}\n                  >\n                        <span style={{fontWeight: \"bold\"}}>\n                        Address: <br/> </span>{company.address}<br/>\n                        <span style={{fontWeight: \"bold\"}}>\n                        Revenue: <br/> </span> {company.revenue}<br/>\n                        <span style={{fontWeight: \"bold\"}}>\n                        Phone Number: <br/> </span> ({company.code}){company.phonumb}\n                  </Card>\n          </List.Item>\n        )}\n        />\n    );\n    \n    return (\n      <div>\n      <CompNode/>\n          <Modal\n              title=\"Confirmation\"\n              visible={this.state.visible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            >\n            Are you sure want to remove this company?\n          </Modal>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  companies: state.companyData\n});\nexport default connect(mapStateToProps)(CompanyList);","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Card, Row, Col  } from 'antd';\nimport OfficeForm from './formOffice';\nimport CompanyForm from './formCompany';\nimport CompanyList from './CompanyList';\n\nconst { Header, Content, Footer } = Layout;\n\n\nclass AllComponent extends Component {\n  render() {\n    return (\n      <div >\n        \n      <Layout className=\"container\">\n        <Header className=\"header\">\n        </Header>\n        <Content className=\"content\"> \n            <Row gutter={12}  >\n              <Col span={12}\n              xs={24} sm={24} md={12} lg={12} xl={12}\n              >\n                <Card title={<span style={{ fontSize: 22}}>Create Company</span>} bordered={true} className=\"card\">\n                  <CompanyForm/>\n                </Card>\n              </Col>\n              <Col span={12}\n              xs={24} sm={24} md={12} lg={12} xl={12}\n              >\n              <Card title={<span style={{ fontSize: 22}}>Create Office</span>} bordered={true} className=\"card\">\n              <OfficeForm/>\n                </Card>\n              </Col>\n            </Row>\n            <Row >\n              <Col span={24}>\n                <Card title={<span style={{ fontSize: 22}}>Companies</span>} className=\"card\">\n                <CompanyList />\n                </Card>\n              </Col>\n            </Row>\n        </Content>\n        <Footer style={{textAlign: 'center'}}>\n          <span > created by Luky Setiawan, UI framework By Ant Design, state management by Redux </span>\n        </Footer>\n      </Layout>\n      </div>\n    );\n  }\n}\n\nexport default AllComponent;\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport OfficeList from './components/OfficeList'\nimport AllComponent from './components';\n\n\nconst Routes = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={AllComponent}/>\n      <Route path='/officelist/:targetId' component={OfficeList} //mengambil id dengan :targetId\n      />\n    </Switch>\n  </main>\n)\n\nexport default Routes","import React, { Component } from 'react';\nimport Routes from './Routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n      <Routes/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n    const initialState =  [\n              {\n                \"companyname\":\"Google\",\n                \"address\":\"Ohio, USA\",\n                \"revenue\":999,\n                \"code\":'+62',\n                \"phonumb\":8172381623,\n                \"id\":\"asd12\",\n                offices:[\n                  {\n                  \"officename\": \"Jakarta Office\",\n                  \"Oid\": 'cr0t',\n                  \"lat\":23.0,\n                  \"log\": -71,\n                  \"startdate\": \"2019-01-01\"\n                }\n              ]\n              },\n            ] ;\n\n\n    const CompReducer=(state = initialState, action ={}) => {\n      \n      switch (action.type) {\n        case \"LOAD\":\n        return state = action.company\n\n        case \"FILTERED_LOAD\":\n        return state.filter(value=>{\n          return value.id === \"asd12\";\n        });\n        case 'REMOVE':\n        return state.filter((company) => company.id !== action.id)\n\n        case 'CREATE':\n        return state.concat([action.company])\n\n        case 'CREATE_OFFICE':\n        return state.map(function(state) {\n        if (state.id === action.id) {\n        return {\n        ...state,\n          ...state.offices.push(action.offici)\n        }\n        } else return state;\n        \n        })\n        case 'REMOVE_OFFICE':\n        return state.map((state) => {\n          if (state.id === action.id) {\n          return {\n          ...state,\n            ...state.offices,\n            offices: [\n              ...state.offices.filter(offices => offices.Oid !== action.Oid, console.log(state))\n            ]\n            \n          }\n          } else return state;\n        }\n        \n        )\n        \n        default:\n          return state;\n        \n      }\n    }\n    \n    export default CompReducer;","import { combineReducers } from \"redux\";\nimport CompReducer from \"./CompReducer\";\n\nconst rootReducer = combineReducers({\n   companyData:CompReducer\n});\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nlet store = createStore(rootReducer);\n\nReactDOM.render((\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}